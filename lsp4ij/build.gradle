plugins {
    id 'org.jetbrains.intellij' version '1.13.3'
    id 'java'
}

group 'org.eclipse.lsp4ij'
version '0.0.3'

sourceCompatibility = 11
targetCompatibility = 11
compileJava.options.debugOptions.debugLevel = "source,lines,vars"
compileTestJava.options.debugOptions.debugLevel = "source,lines,vars"

repositories {
    mavenCentral()
    maven {
        url 'https://repo.eclipse.org/content/repositories/snapshots'
    }
    maven {
        url 'https://repo.eclipse.org/content/repositories/releases'
    }
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots"
    }
    maven {
        url = "https://packages.jetbrains.team/maven/p/ij/intellij-dependencies"
    }
    maven {
        url = "https://www.jetbrains.com/intellij-repository/releases"
    }
    maven {
        url = "https://packages.jetbrains.team/maven/p/kpm/public"
    }
    maven {
        url = "https://cache-redirector.jetbrains.com/packages.jetbrains.team/maven/p/grazi/grazie-platform-public"
    }
    maven {
        url = "https://download.jetbrains.com/teamcity-repository"
    }
    maven {
        url = "https://cache-redirector.jetbrains.com/download-pgp-verifier"
    }
    mavenLocal() // TODO remove once Liberty LS is publicly available
}

configurations {
    // needed to avoid ClassCastException org.apache.xerces.jaxp.DocumentBuilderFactoryImpl cannot be cast to class javax.xml.parsers.DocumentBuilderFactory
    // xml-apis interfering with xercs
    all*.exclude group: 'xml-apis'

    runtimeClasspath {
        exclude group: 'org.slf4j', module: 'slf4j-api'
    }
}

dependencies {
    implementation 'org.eclipse.lsp4j:org.eclipse.lsp4j:0.21.0'
    implementation 'org.eclipse.lsp4j:org.eclipse.lsp4j.jsonrpc:0.21.0'
    //required by lsp4j as the version from IJ is incompatible
    implementation 'com.google.code.gson:gson:2.8.9'
    //Add junit dependency back when tests are added
    //testImplementation group: 'junit', name: 'junit', version: '4.13.1'

    // JUnit 4
    //testImplementation 'org.junit.platform:junit-platform-launcher:1.9.3'
    //testImplementation 'org.junit.vintage:junit-vintage-engine:5.9.3'
}

configurations.implementation.setCanBeResolved(true)
jar {
    manifest {
        attributes "Main-Class": "MainClass"
    }

    from {
        configurations.implementation.collect { it.isDirectory() ? it : zipTree(it) }
    } {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
        duplicatesStrategy 'include' // error copying duplicate about.html
    }
    extension 'uber.jar'
}

intellij {
    // For a full list of IntelliJ IDEA releases please see https://www.jetbrains.com/intellij-repository/releases
    version = '2022.2'
    updateSinceUntilBuild = false
    plugins = ['java', 'gradle-java', 'com.intellij.gradle']
}

test {
    useJUnitPlatform()

    testLogging {
        showStandardStreams = true
        exceptionFormat = 'full'
    }
}